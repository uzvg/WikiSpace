created: 20240715195021928
modified: 20240716072431826
tags: Python
title: Python控制流工具/for
type: text/vnd.tiddlywiki

python中的for语句跟C语言中的for语句很不一样，一般情况下，只是在列表或字符串等任意序列的元素上迭代，按它们在序列中出现的顺序。

!! 特点

* 很难在迭代多项集的同时修改多项集的内容
** 为什么？
*** 因为这样可能会导致一些不可预见的错误。例如，如果在迭代过程中删除或添加元素，那么迭代器可能会丢失对集合当前状态的跟踪，导致某些元素被跳过或者重复处理。
** 对应的解决方案？
*** 迭代集合的副本：在迭代之前，首先创建集合的一个副本，然后在副本上进行迭代。这样，即使在迭代过程中对副本进行了修改，原始集合仍然保持不变。示例代码中使用了`users.copy()`来创建一个字典的副本，并在副本上进行迭代，如果发现某个用户的状态是'inactive'，则从原始字典`users`中删除这个用户。
*** 创建新的集合：在迭代过程中，根据一定的条件筛选元素，并将这些元素添加到一个新的集合中。这样，原始集合不会被修改，而是创建了一个满足特定条件的新集合。在示例代码中，`active_users`字典就是通过迭代`users`字典，并筛选出状态为'active'的用户来创建的。

